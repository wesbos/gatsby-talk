{"version":3,"sources":["scripts.js"],"names":["navigator","userAgent","includes","document","body","classList","add","options","threshold","callback","entries","forEach","entry","isIntersecting","target","parentElement","contains","play","pause","observer","IntersectionObserver","videos","querySelectorAll","video","observe"],"mappings":";AAAIA,UAAUC,UAAUC,SAAS,YAC/BC,SAASC,KAAKC,UAAUC,IAAI,WAG9B,IAAMC,EAAU,CACdC,UAAW,CAAC,EAAG,IAGXC,EAAW,SAAAC,GACfA,EAAQC,QAAQ,SAAAC,GACVA,EAAMC,gBAAkBD,EAAME,OAAOC,cAAcV,UAAUW,SAAS,WACxEJ,EAAME,OAAOG,OAEbL,EAAME,OAAOI,WAKbC,EAAW,IAAIC,qBAAqBX,EAAUF,GAG9Cc,EAASlB,SAASmB,iBAAiB,SAEzCD,EAAOV,QAAQ,SAAAY,GAASJ,OAAAA,EAASK,QAAQD","file":"scripts.ca6e5912.js","sourceRoot":"..","sourcesContent":["if (navigator.userAgent.includes('Firefox')) {\n  document.body.classList.add('firefox');\n}\n\nconst options = {\n  threshold: [0, 1.0],\n};\n\nconst callback = entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting && entry.target.parentElement.classList.contains('current')) {\n      entry.target.play();\n    } else {\n      entry.target.pause();\n    }\n  });\n};\n\nconst observer = new IntersectionObserver(callback, options);\n\n// get a list of all videos on the page\nconst videos = document.querySelectorAll('video');\n// Observe each of those elements\nvideos.forEach(video => observer.observe(video));\n"]}